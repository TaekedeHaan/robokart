function yd = eom(t, y, force, torque)
qd = y(5:end);
% get parameters
par = load_param();
[La, Lb, L, ma, mb, m, Ia, Ib, I, bLin, bRot] = unfold_param(par);
%unpack
[x, y, phi, alpha, xd, yd, phid, alphad] = unfold_y(y);
qdd = [
 -(2*La*torque*sin(2*alpha + phi) - 4*Lb*torque*sin(phi) + 4*Lb*torque*sin(2*alpha + phi) - 4*La^2*force*cos(phi) - 4*Lb^2*force*cos(phi) - 2*La^2*force*cos(2*alpha + phi) - 4*Lb^2*force*cos(2*alpha + phi) + 2*I*alphad*yd + 2*Ib*alphad*yd + 2*La*torque*sin(2*alpha - phi) + 4*I*phid*yd + 4*Ib*phid*yd - 2*La^2*force*cos(2*alpha - phi) + 2*La^2*bLin*xd + 4*Lb^2*bLin*xd + 2*La^2*bLin*xd*cos(2*alpha) + 2*La^2*bLin*xd*cos(2*phi) + 2*La^2*bLin*yd*sin(2*phi) - 8*La*Lb*force*cos(phi) + La^2*bLin*xd*cos(2*alpha - 2*phi) + La^2*bLin*xd*cos(2*alpha + 2*phi) + 4*Lb^2*bLin*xd*cos(2*alpha + 2*phi) - La^2*bLin*yd*sin(2*alpha - 2*phi) + La^2*bLin*yd*sin(2*alpha + 2*phi) + 4*Lb^2*bLin*yd*sin(2*alpha + 2*phi) - 6*La*Lb*force*cos(2*alpha + phi) + 4*Lb^2*alphad*m*yd + 4*Lb*alphad*bRot*sin(phi) + 2*La^2*alphad*ma*yd + 4*Lb^2*alphad*ma*yd + 2*Lb^2*alphad*mb*yd + 2*La^2*m*phid*yd + 4*Lb^2*m*phid*yd + 4*Lb*bRot*phid*sin(phi) + 6*La^2*ma*phid*yd + 2*La^2*mb*phid*yd + 4*Lb^2*ma*phid*yd + 2*Lb^2*mb*phid*yd - 2*La*alphad*bRot*sin(2*alpha + phi) - 4*Lb*alphad*bRot*sin(2*alpha + phi) - 2*La*bRot*phid*sin(2*alpha + phi) - 4*Lb*bRot*phid*sin(2*alpha + phi) - 2*I*alphad*yd*cos(2*alpha) - 2*Ib*alphad*yd*cos(2*alpha) - 2*La*Lb*force*cos(2*alpha - phi) + 2*I*alphad*xd*sin(2*alpha) + 2*I*alphad*yd*cos(2*phi) - 4*I*phid*yd*cos(2*alpha) + 2*Ib*alphad*xd*sin(2*alpha) + 2*Ib*alphad*yd*cos(2*phi) - 4*Ib*phid*yd*cos(2*alpha) - 2*I*alphad*xd*sin(2*phi) - 2*Ib*alphad*xd*sin(2*phi) + 4*La*Lb*bLin*xd - 2*La*alphad*bRot*sin(2*alpha - phi) - 2*I*alphad*yd*cos(2*alpha + 2*phi) - 2*Ib*alphad*yd*cos(2*alpha + 2*phi) - 2*La*bRot*phid*sin(2*alpha - phi) + 2*I*alphad*xd*sin(2*alpha + 2*phi) + 2*Ib*alphad*xd*sin(2*alpha + 2*phi) + 4*La*Lb*bLin*xd*cos(2*phi) + 4*La*Lb*bLin*yd*sin(2*phi) - 2*I*La*alphad*phid*cos(2*alpha - phi) - 2*Ib*La*alphad*phid*cos(2*alpha - phi) + 4*La^3*alphad*ma*phid*cos(phi) + 4*La*Lb*bLin*xd*cos(2*alpha + 2*phi) + 4*La*Lb*bLin*yd*sin(2*alpha + 2*phi) - 2*La^3*alphad*ma*phid*cos(2*alpha + phi) + 2*La*Lb*alphad*m*yd + 6*La*Lb*alphad*ma*yd + 2*La*Lb*alphad*mb*yd + 4*La*Lb*m*phid*yd + 10*La*Lb*ma*phid*yd + 4*La*Lb*mb*phid*yd - 2*La^2*alphad*ma*yd*cos(2*alpha) + 2*Lb^2*alphad*mb*yd*cos(2*alpha) + 2*La^2*m*phid*yd*cos(2*alpha) + 2*La^2*alphad*ma*xd*sin(2*alpha) + 2*La^2*alphad*ma*yd*cos(2*phi) - 2*La^2*ma*phid*yd*cos(2*alpha) - 2*Lb^2*alphad*mb*xd*sin(2*alpha) + 2*La^2*mb*phid*yd*cos(2*alpha) - 2*Lb^2*alphad*mb*yd*cos(2*phi) + 2*Lb^2*mb*phid*yd*cos(2*alpha) - 2*La^2*m*phid*yd*cos(2*phi) - 2*La^2*alphad*ma*xd*sin(2*phi) + 2*La^2*ma*phid*xd*sin(2*alpha) - 2*La^2*ma*phid*yd*cos(2*phi) + 2*Lb^2*alphad*mb*xd*sin(2*phi) - 2*Lb^2*mb*phid*xd*sin(2*alpha) - 2*La^2*mb*phid*yd*cos(2*phi) - 2*Lb^2*mb*phid*yd*cos(2*phi) + 4*I*La*alphad*phid*cos(phi) + 4*Ib*La*alphad*phid*cos(phi) - 2*La^3*alphad*ma*phid*cos(2*alpha - phi) + 2*La^2*m*phid*xd*sin(2*phi) + 2*La^2*ma*phid*xd*sin(2*phi) + 2*La^2*mb*phid*xd*sin(2*phi) + 2*Lb^2*mb*phid*xd*sin(2*phi) - 4*Lb^2*alphad*m*yd*cos(2*alpha + 2*phi) - 2*La^2*alphad*ma*yd*cos(2*alpha + 2*phi) - 4*Lb^2*alphad*ma*yd*cos(2*alpha + 2*phi) - 2*Lb^2*alphad*mb*yd*cos(2*alpha + 2*phi) + 4*Lb^2*alphad*m*xd*sin(2*alpha + 2*phi) - La^2*m*phid*yd*cos(2*alpha - 2*phi) - La^2*m*phid*yd*cos(2*alpha + 2*phi) - 4*Lb^2*m*phid*yd*cos(2*alpha + 2*phi) + 2*La^2*alphad*ma*xd*sin(2*alpha + 2*phi) + 4*Lb^2*alphad*ma*xd*sin(2*alpha + 2*phi) - 2*La^2*ma*phid*yd*cos(2*alpha + 2*phi) + 2*Lb^2*alphad*mb*xd*sin(2*alpha + 2*phi) - La^2*mb*phid*yd*cos(2*alpha - 2*phi) - La^2*mb*phid*yd*cos(2*alpha + 2*phi) - 4*Lb^2*ma*phid*yd*cos(2*alpha + 2*phi) - 2*Lb^2*mb*phid*yd*cos(2*alpha + 2*phi) - 2*I*La*alphad*phid*cos(2*alpha + phi) - 2*Ib*La*alphad*phid*cos(2*alpha + phi) - La^2*m*phid*xd*sin(2*alpha - 2*phi) + La^2*m*phid*xd*sin(2*alpha + 2*phi) + 4*Lb^2*m*phid*xd*sin(2*alpha + 2*phi) + 2*La^2*ma*phid*xd*sin(2*alpha + 2*phi) - La^2*mb*phid*xd*sin(2*alpha - 2*phi) + La^2*mb*phid*xd*sin(2*alpha + 2*phi) + 4*Lb^2*ma*phid*xd*sin(2*alpha + 2*phi) + 2*Lb^2*mb*phid*xd*sin(2*alpha + 2*phi) + 4*La*Lb*bLin*xd*cos(2*alpha) + 2*La*Lb*alphad*m*yd*cos(2*alpha) - 2*La*Lb*alphad*ma*yd*cos(2*alpha) + 2*La*Lb*alphad*mb*yd*cos(2*alpha) + 4*La*Lb^2*alphad*m*phid*cos(phi) + 4*La*Lb^2*alphad*ma*phid*cos(phi) + 8*La^2*Lb*alphad*ma*phid*cos(phi) - 2*La*Lb*alphad*m*xd*sin(2*alpha) - 2*La*Lb*alphad*m*yd*cos(2*phi) + 4*La*Lb*m*phid*yd*cos(2*alpha) + 2*La*Lb*alphad*ma*xd*sin(2*alpha) - 2*La*Lb*alphad*mb*xd*sin(2*alpha) + 2*La*Lb*alphad*ma*yd*cos(2*phi) - 2*La*Lb*ma*phid*yd*cos(2*alpha) - 2*La*Lb*alphad*mb*yd*cos(2*phi) + 4*La*Lb*mb*phid*yd*cos(2*alpha) + 2*La*Lb*alphad*m*xd*sin(2*phi) - 4*La*Lb*m*phid*yd*cos(2*phi) - 2*La*Lb*alphad*ma*xd*sin(2*phi) + 2*La*Lb*ma*phid*xd*sin(2*alpha) + 2*La*Lb*alphad*mb*xd*sin(2*phi) - 2*La*Lb*mb*phid*xd*sin(2*alpha) - 2*La*Lb*ma*phid*yd*cos(2*phi) - 4*La*Lb*mb*phid*yd*cos(2*phi) - 4*La*Lb^2*alphad*m*phid*cos(2*alpha + phi) - 2*La^2*Lb*alphad*m*phid*cos(2*alpha + phi) - 4*La*Lb^2*alphad*ma*phid*cos(2*alpha + phi) - 6*La^2*Lb*alphad*ma*phid*cos(2*alpha + phi) - 2*La*Lb^2*alphad*mb*phid*cos(2*alpha + phi) - 2*La^2*Lb*alphad*mb*phid*cos(2*alpha + phi) + 4*La*Lb*m*phid*xd*sin(2*phi) + 2*La*Lb*ma*phid*xd*sin(2*phi) + 4*La*Lb*mb*phid*xd*sin(2*phi) - 2*La*Lb*alphad*m*yd*cos(2*alpha + 2*phi) - 6*La*Lb*alphad*ma*yd*cos(2*alpha + 2*phi) - 2*La*Lb*alphad*mb*yd*cos(2*alpha + 2*phi) + 2*La*Lb*alphad*m*xd*sin(2*alpha + 2*phi) - 4*La*Lb*m*phid*yd*cos(2*alpha + 2*phi) + 6*La*Lb*alphad*ma*xd*sin(2*alpha + 2*phi) + 2*La*Lb*alphad*mb*xd*sin(2*alpha + 2*phi) - 6*La*Lb*ma*phid*yd*cos(2*alpha + 2*phi) - La*Lb*mb*phid*yd*cos(2*alpha - 2*phi) - 3*La*Lb*mb*phid*yd*cos(2*alpha + 2*phi) + 4*La*Lb*m*phid*xd*sin(2*alpha + 2*phi) + 6*La*Lb*ma*phid*xd*sin(2*alpha + 2*phi) - La*Lb*mb*phid*xd*sin(2*alpha - 2*phi) + 3*La*Lb*mb*phid*xd*sin(2*alpha + 2*phi) + 2*La^2*Lb*alphad*m*phid*cos(2*alpha - phi) - 2*La^2*Lb*alphad*ma*phid*cos(2*alpha - phi) + 2*La*Lb^2*alphad*mb*phid*cos(2*alpha - phi) + 2*La^2*Lb*alphad*mb*phid*cos(2*alpha - phi))/(4*(I + Ib + La^2*m + 2*Lb^2*m + 2*La^2*ma + La^2*mb + 2*Lb^2*ma + Lb^2*mb - I*cos(2*alpha) - Ib*cos(2*alpha) + 2*La*Lb*m + 4*La*Lb*ma + 2*La*Lb*mb + La^2*m*cos(2*alpha) + La^2*mb*cos(2*alpha) + Lb^2*mb*cos(2*alpha) + 2*La*Lb*m*cos(2*alpha) + 2*La*Lb*mb*cos(2*alpha)))
  (2*La*torque*cos(2*alpha + phi) + 4*Lb*torque*cos(2*alpha + phi) + 4*La^2*force*sin(phi) + 4*Lb^2*force*sin(phi) - 2*La*torque*cos(2*alpha - phi) + 2*La^2*force*sin(2*alpha + phi) + 4*Lb^2*force*sin(2*alpha + phi) + 2*I*alphad*xd + 2*Ib*alphad*xd + 4*I*phid*xd + 4*Ib*phid*xd - 2*La^2*force*sin(2*alpha - phi) - 2*La^2*bLin*yd - 4*Lb^2*bLin*yd - 4*Lb*torque*cos(phi) - 2*La^2*bLin*yd*cos(2*alpha) + 2*La^2*bLin*yd*cos(2*phi) - 2*La^2*bLin*xd*sin(2*phi) + La^2*bLin*yd*cos(2*alpha - 2*phi) + La^2*bLin*yd*cos(2*alpha + 2*phi) + 4*Lb^2*bLin*yd*cos(2*alpha + 2*phi) + 8*La*Lb*force*sin(phi) + 4*Lb*alphad*bRot*cos(phi) + La^2*bLin*xd*sin(2*alpha - 2*phi) - La^2*bLin*xd*sin(2*alpha + 2*phi) - 4*Lb^2*bLin*xd*sin(2*alpha + 2*phi) + 4*Lb^2*alphad*m*xd + 4*Lb*bRot*phid*cos(phi) + 2*La^2*alphad*ma*xd + 4*Lb^2*alphad*ma*xd + 2*Lb^2*alphad*mb*xd + 2*La^2*m*phid*xd + 4*Lb^2*m*phid*xd + 6*La^2*ma*phid*xd + 2*La^2*mb*phid*xd + 4*Lb^2*ma*phid*xd + 2*Lb^2*mb*phid*xd + 6*La*Lb*force*sin(2*alpha + phi) - 2*La*alphad*bRot*cos(2*alpha + phi) - 4*Lb*alphad*bRot*cos(2*alpha + phi) - 2*La*bRot*phid*cos(2*alpha + phi) - 4*Lb*bRot*phid*cos(2*alpha + phi) - 2*I*alphad*xd*cos(2*alpha) - 2*Ib*alphad*xd*cos(2*alpha) - 2*I*alphad*xd*cos(2*phi) - 4*I*phid*xd*cos(2*alpha) - 2*Ib*alphad*xd*cos(2*phi) - 4*Ib*phid*xd*cos(2*alpha) - 2*I*alphad*yd*sin(2*alpha) - 2*Ib*alphad*yd*sin(2*alpha) - 2*La*Lb*force*sin(2*alpha - phi) + 2*La*alphad*bRot*cos(2*alpha - phi) - 2*I*alphad*yd*sin(2*phi) - 2*Ib*alphad*yd*sin(2*phi) + 2*La*bRot*phid*cos(2*alpha - phi) - 4*La*Lb*bLin*yd + 2*I*alphad*xd*cos(2*alpha + 2*phi) + 2*Ib*alphad*xd*cos(2*alpha + 2*phi) + 2*I*alphad*yd*sin(2*alpha + 2*phi) + 2*Ib*alphad*yd*sin(2*alpha + 2*phi) + 4*La*Lb*bLin*yd*cos(2*phi) - 4*La*Lb*bLin*xd*sin(2*phi) + 4*La*Lb*bLin*yd*cos(2*alpha + 2*phi) - 2*I*La*alphad*phid*sin(2*alpha - phi) - 2*Ib*La*alphad*phid*sin(2*alpha - phi) - 4*La^3*alphad*ma*phid*sin(phi) - 4*La*Lb*bLin*xd*sin(2*alpha + 2*phi) + 2*La*Lb*alphad*m*xd + 6*La*Lb*alphad*ma*xd + 2*La*Lb*alphad*mb*xd + 4*La*Lb*m*phid*xd + 10*La*Lb*ma*phid*xd + 4*La*Lb*mb*phid*xd + 2*La^3*alphad*ma*phid*sin(2*alpha + phi) - 2*La^2*alphad*ma*xd*cos(2*alpha) + 2*Lb^2*alphad*mb*xd*cos(2*alpha) + 2*La^2*m*phid*xd*cos(2*alpha) - 2*La^2*alphad*ma*xd*cos(2*phi) - 2*La^2*ma*phid*xd*cos(2*alpha) + 2*La^2*mb*phid*xd*cos(2*alpha) + 2*Lb^2*alphad*mb*xd*cos(2*phi) + 2*Lb^2*mb*phid*xd*cos(2*alpha) - 2*La^2*alphad*ma*yd*sin(2*alpha) + 2*Lb^2*alphad*mb*yd*sin(2*alpha) + 2*La^2*m*phid*xd*cos(2*phi) + 2*La^2*ma*phid*xd*cos(2*phi) + 2*La^2*mb*phid*xd*cos(2*phi) + 2*Lb^2*mb*phid*xd*cos(2*phi) - 2*La^2*alphad*ma*yd*sin(2*phi) - 2*La^2*ma*phid*yd*sin(2*alpha) + 2*Lb^2*alphad*mb*yd*sin(2*phi) + 2*Lb^2*mb*phid*yd*sin(2*alpha) + 2*La^2*m*phid*yd*sin(2*phi) + 4*Lb^2*alphad*m*xd*cos(2*alpha + 2*phi) + 2*La^2*ma*phid*yd*sin(2*phi) + 2*La^2*mb*phid*yd*sin(2*phi) + 2*Lb^2*mb*phid*yd*sin(2*phi) + 2*La^2*alphad*ma*xd*cos(2*alpha + 2*phi) + 4*Lb^2*alphad*ma*xd*cos(2*alpha + 2*phi) + 2*Lb^2*alphad*mb*xd*cos(2*alpha + 2*phi) - 4*I*La*alphad*phid*sin(phi) - 4*Ib*La*alphad*phid*sin(phi) - 2*La^3*alphad*ma*phid*sin(2*alpha - phi) + La^2*m*phid*xd*cos(2*alpha - 2*phi) + La^2*m*phid*xd*cos(2*alpha + 2*phi) + 4*Lb^2*m*phid*xd*cos(2*alpha + 2*phi) + 2*La^2*ma*phid*xd*cos(2*alpha + 2*phi) + La^2*mb*phid*xd*cos(2*alpha - 2*phi) + La^2*mb*phid*xd*cos(2*alpha + 2*phi) + 4*Lb^2*ma*phid*xd*cos(2*alpha + 2*phi) + 2*Lb^2*mb*phid*xd*cos(2*alpha + 2*phi) + 4*Lb^2*alphad*m*yd*sin(2*alpha + 2*phi) + 2*La^2*alphad*ma*yd*sin(2*alpha + 2*phi) + 4*Lb^2*alphad*ma*yd*sin(2*alpha + 2*phi) + 2*Lb^2*alphad*mb*yd*sin(2*alpha + 2*phi) - La^2*m*phid*yd*sin(2*alpha - 2*phi) + La^2*m*phid*yd*sin(2*alpha + 2*phi) + 4*Lb^2*m*phid*yd*sin(2*alpha + 2*phi) + 2*La^2*ma*phid*yd*sin(2*alpha + 2*phi) - La^2*mb*phid*yd*sin(2*alpha - 2*phi) + La^2*mb*phid*yd*sin(2*alpha + 2*phi) + 4*Lb^2*ma*phid*yd*sin(2*alpha + 2*phi) + 2*Lb^2*mb*phid*yd*sin(2*alpha + 2*phi) + 2*I*La*alphad*phid*sin(2*alpha + phi) + 2*Ib*La*alphad*phid*sin(2*alpha + phi) - 4*La*Lb*bLin*yd*cos(2*alpha) + 2*La*Lb*alphad*m*xd*cos(2*alpha) - 2*La*Lb*alphad*ma*xd*cos(2*alpha) + 2*La*Lb*alphad*mb*xd*cos(2*alpha) + 2*La*Lb*alphad*m*xd*cos(2*phi) + 4*La*Lb*m*phid*xd*cos(2*alpha) - 2*La*Lb*alphad*ma*xd*cos(2*phi) - 2*La*Lb*ma*phid*xd*cos(2*alpha) + 2*La*Lb*alphad*mb*xd*cos(2*phi) + 4*La*Lb*mb*phid*xd*cos(2*alpha) + 2*La*Lb*alphad*m*yd*sin(2*alpha) - 2*La*Lb*alphad*ma*yd*sin(2*alpha) + 2*La*Lb*alphad*mb*yd*sin(2*alpha) - 4*La*Lb^2*alphad*m*phid*sin(phi) - 4*La*Lb^2*alphad*ma*phid*sin(phi) - 8*La^2*Lb*alphad*ma*phid*sin(phi) + 4*La*Lb*m*phid*xd*cos(2*phi) + 2*La*Lb*ma*phid*xd*cos(2*phi) + 4*La*Lb*mb*phid*xd*cos(2*phi) + 2*La*Lb*alphad*m*yd*sin(2*phi) - 2*La*Lb*alphad*ma*yd*sin(2*phi) - 2*La*Lb*ma*phid*yd*sin(2*alpha) + 2*La*Lb*alphad*mb*yd*sin(2*phi) + 2*La*Lb*mb*phid*yd*sin(2*alpha) + 4*La*Lb*m*phid*yd*sin(2*phi) + 2*La*Lb*alphad*m*xd*cos(2*alpha + 2*phi) + 2*La*Lb*ma*phid*yd*sin(2*phi) + 4*La*Lb*mb*phid*yd*sin(2*phi) + 6*La*Lb*alphad*ma*xd*cos(2*alpha + 2*phi) + 2*La*Lb*alphad*mb*xd*cos(2*alpha + 2*phi) + 4*La*Lb^2*alphad*m*phid*sin(2*alpha + phi) + 2*La^2*Lb*alphad*m*phid*sin(2*alpha + phi) + 4*La*Lb^2*alphad*ma*phid*sin(2*alpha + phi) + 6*La^2*Lb*alphad*ma*phid*sin(2*alpha + phi) + 2*La*Lb^2*alphad*mb*phid*sin(2*alpha + phi) + 2*La^2*Lb*alphad*mb*phid*sin(2*alpha + phi) + 4*La*Lb*m*phid*xd*cos(2*alpha + 2*phi) + 6*La*Lb*ma*phid*xd*cos(2*alpha + 2*phi) + La*Lb*mb*phid*xd*cos(2*alpha - 2*phi) + 3*La*Lb*mb*phid*xd*cos(2*alpha + 2*phi) + 2*La*Lb*alphad*m*yd*sin(2*alpha + 2*phi) + 6*La*Lb*alphad*ma*yd*sin(2*alpha + 2*phi) + 2*La*Lb*alphad*mb*yd*sin(2*alpha + 2*phi) + 4*La*Lb*m*phid*yd*sin(2*alpha + 2*phi) + 6*La*Lb*ma*phid*yd*sin(2*alpha + 2*phi) - La*Lb*mb*phid*yd*sin(2*alpha - 2*phi) + 3*La*Lb*mb*phid*yd*sin(2*alpha + 2*phi) + 2*La^2*Lb*alphad*m*phid*sin(2*alpha - phi) - 2*La^2*Lb*alphad*ma*phid*sin(2*alpha - phi) + 2*La*Lb^2*alphad*mb*phid*sin(2*alpha - phi) + 2*La^2*Lb*alphad*mb*phid*sin(2*alpha - phi))/(4*(I + Ib + La^2*m + 2*Lb^2*m + 2*La^2*ma + La^2*mb + 2*Lb^2*ma + Lb^2*mb - I*cos(2*alpha) - Ib*cos(2*alpha) + 2*La*Lb*m + 4*La*Lb*ma + 2*La*Lb*mb + La^2*m*cos(2*alpha) + La^2*mb*cos(2*alpha) + Lb^2*mb*cos(2*alpha) + 2*La*Lb*m*cos(2*alpha) + 2*La*Lb*mb*cos(2*alpha)))
alphad*bRot - torque + bRot*phid + torque*cos(2*alpha) + La*force*sin(2*alpha) + Lb*force*sin(2*alpha) - alphad*bRot*cos(2*alpha) - bRot*phid*cos(2*alpha) - Lb*bLin*yd*cos(phi) + Lb*bLin*xd*sin(phi) + (La*bLin*yd*cos(2*alpha + phi))/2 + Lb*bLin*yd*cos(2*alpha + phi) - (La*bLin*xd*sin(2*alpha + phi))/2 - Lb*bLin*xd*sin(2*alpha + phi) - (La*bLin*yd*cos(2*alpha - phi))/2 - (La*bLin*xd*sin(2*alpha - phi))/2 + (La*m*phid*yd*sin(2*alpha + phi))/2 + Lb*m*phid*yd*sin(2*alpha + phi) + La*ma*phid*yd*sin(2*alpha + phi) + (La*mb*phid*yd*sin(2*alpha + phi))/2 + Lb*ma*phid*yd*sin(2*alpha + phi) + (Lb*mb*phid*yd*sin(2*alpha + phi))/2 - (La*m*phid*xd*cos(2*alpha - phi))/2 - (La*mb*phid*xd*cos(2*alpha - phi))/2 - (Lb*mb*phid*xd*cos(2*alpha - phi))/2 + (La*m*phid*yd*sin(2*alpha - phi))/2 + (La*mb*phid*yd*sin(2*alpha - phi))/2 + (Lb*mb*phid*yd*sin(2*alpha - phi))/2 + La^2*alphad*m*phid*sin(2*alpha) + La^2*alphad*ma*phid*sin(2*alpha) + La^2*alphad*mb*phid*sin(2*alpha) + La*alphad*m*xd*cos(phi) + Lb*alphad*m*xd*cos(phi) + La*alphad*ma*xd*cos(phi) + La*alphad*mb*xd*cos(phi) + Lb*alphad*ma*xd*cos(phi) + Lb*alphad*mb*xd*cos(phi) - Lb*m*phid*xd*cos(phi) - La*ma*phid*xd*cos(phi) - Lb*ma*phid*xd*cos(phi) + La*alphad*m*yd*sin(phi) + Lb*alphad*m*yd*sin(phi) + La*alphad*ma*yd*sin(phi) + La*alphad*mb*yd*sin(phi) + Lb*alphad*ma*yd*sin(phi) + Lb*alphad*mb*yd*sin(phi) - Lb*m*phid*yd*sin(phi) + La*alphad*m*xd*cos(2*alpha + phi) + Lb*alphad*m*xd*cos(2*alpha + phi) - La*ma*phid*yd*sin(phi) - Lb*ma*phid*yd*sin(phi) + La*alphad*ma*xd*cos(2*alpha + phi) + La*alphad*mb*xd*cos(2*alpha + phi) + Lb*alphad*ma*xd*cos(2*alpha + phi) + Lb*alphad*mb*xd*cos(2*alpha + phi) + (La*m*phid*xd*cos(2*alpha + phi))/2 + Lb*m*phid*xd*cos(2*alpha + phi) + La*ma*phid*xd*cos(2*alpha + phi) + (La*mb*phid*xd*cos(2*alpha + phi))/2 + Lb*ma*phid*xd*cos(2*alpha + phi) + (Lb*mb*phid*xd*cos(2*alpha + phi))/2 + La*alphad*m*yd*sin(2*alpha + phi) + Lb*alphad*m*yd*sin(2*alpha + phi) + La*alphad*ma*yd*sin(2*alpha + phi) + La*alphad*mb*yd*sin(2*alpha + phi) + Lb*alphad*ma*yd*sin(2*alpha + phi) + Lb*alphad*mb*yd*sin(2*alpha + phi) + La*Lb*alphad*m*phid*sin(2*alpha) + La*Lb*alphad*ma*phid*sin(2*alpha) + La*Lb*alphad*mb*phid*sin(2*alpha))/(I + Ib + La^2*m + 2*Lb^2*m + 2*La^2*ma + La^2*mb + 2*Lb^2*ma + Lb^2*mb - I*cos(2*alpha) - Ib*cos(2*alpha) + 2*La*Lb*m + 4*La*Lb*ma + 2*La*Lb*mb + La^2*m*cos(2*alpha) + La^2*mb*cos(2*alpha) + Lb^2*mb*cos(2*alpha) + 2*La*Lb*m*cos(2*alpha) + 2*La*Lb*mb*cos(2*alpha))
torque*cos(2*alpha) - Ia*torque - Ib*torque - I*torque + Ia*torque*cos(2*alpha) + Ib*torque*cos(2*alpha) + I*alphad*bRot + Ia*alphad*bRot + Ib*alphad*bRot + I*bRot*phid + Ia*bRot*phid + Ib*bRot*phid - La^2*m*torque - 2*Lb^2*m*torque - 2*La^2*ma*torque - La^2*mb*torque - 2*Lb^2*ma*torque - Lb^2*mb*torque - La^2*m*torque*cos(2*alpha) - La^2*mb*torque*cos(2*alpha) - Lb^2*mb*torque*cos(2*alpha) + La^2*alphad*bRot*m + 2*Lb^2*alphad*bRot*m + 2*La^2*alphad*bRot*ma + La^2*alphad*bRot*mb + 2*Lb^2*alphad*bRot*ma + Lb^2*alphad*bRot*mb + La^2*bRot*m*phid + 2*Lb^2*bRot*m*phid + 2*La^2*bRot*ma*phid + La^2*bRot*mb*phid + 2*Lb^2*bRot*ma*phid + Lb^2*bRot*mb*phid + Ia*La*force*sin(2*alpha) + Ia*Lb*force*sin(2*alpha) - I*alphad*bRot*cos(2*alpha) - Ia*alphad*bRot*cos(2*alpha) - Ib*alphad*bRot*cos(2*alpha) - I*bRot*phid*cos(2*alpha) - Ia*bRot*phid*cos(2*alpha) - Ib*bRot*phid*cos(2*alpha) - 2*La*Lb*m*torque - 4*La*Lb*ma*torque - 2*La*Lb*mb*torque - (Ia*La*bLin*yd*cos(2*alpha - phi))/2 + 2*La*Lb*alphad*bRot*m + 4*La*Lb*alphad*bRot*ma + 2*La*Lb*alphad*bRot*mb - (Ia*La*bLin*xd*sin(2*alpha - phi))/2 + 2*La*Lb*bRot*m*phid + 4*La*Lb*bRot*ma*phid + 2*La*Lb*bRot*mb*phid + La^2*alphad*bRot*m*cos(2*alpha) + La^2*alphad*bRot*mb*cos(2*alpha) + Lb^2*alphad*bRot*mb*cos(2*alpha) + La^2*bRot*m*phid*cos(2*alpha) + La^2*bRot*mb*phid*cos(2*alpha) + Lb^2*bRot*mb*phid*cos(2*alpha) - Ia*Lb*bLin*yd*cos(phi) + Ia*Lb*bLin*xd*sin(phi) + (Ia*La*bLin*yd*cos(2*alpha + phi))/2 + Ia*Lb*bLin*yd*cos(2*alpha + phi) - (Ia*La*bLin*xd*sin(2*alpha + phi))/2 - Ia*Lb*bLin*xd*sin(2*alpha + phi) - 2*La*Lb*m*torque*cos(2*alpha) - 2*La*Lb*mb*torque*cos(2*alpha) + Ia*La*alphad*m*xd*cos(phi) + Ia*Lb*alphad*m*xd*cos(phi) + Ia*La*alphad*ma*xd*cos(phi) + Ia*La*alphad*mb*xd*cos(phi) + Ia*Lb*alphad*ma*xd*cos(phi) + Ia*Lb*alphad*mb*xd*cos(phi) - Ia*Lb*m*phid*xd*cos(phi) - Ia*La*ma*phid*xd*cos(phi) - Ia*Lb*ma*phid*xd*cos(phi) + Ia*La*alphad*m*yd*sin(phi) + Ia*Lb*alphad*m*yd*sin(phi) + Ia*La*alphad*ma*yd*sin(phi) + Ia*La*alphad*mb*yd*sin(phi) + Ia*Lb*alphad*ma*yd*sin(phi) + Ia*Lb*alphad*mb*yd*sin(phi) - Ia*Lb*m*phid*yd*sin(phi) + Ia*La*alphad*m*xd*cos(2*alpha + phi) + Ia*Lb*alphad*m*xd*cos(2*alpha + phi) - Ia*La*ma*phid*yd*sin(phi) - Ia*Lb*ma*phid*yd*sin(phi) + Ia*La*alphad*ma*xd*cos(2*alpha + phi) + Ia*La*alphad*mb*xd*cos(2*alpha + phi) + Ia*Lb*alphad*ma*xd*cos(2*alpha + phi) + Ia*Lb*alphad*mb*xd*cos(2*alpha + phi) + (Ia*La*m*phid*xd*cos(2*alpha + phi))/2 + Ia*Lb*m*phid*xd*cos(2*alpha + phi) + Ia*La*ma*phid*xd*cos(2*alpha + phi) + (Ia*La*mb*phid*xd*cos(2*alpha + phi))/2 + Ia*Lb*ma*phid*xd*cos(2*alpha + phi) + (Ia*Lb*mb*phid*xd*cos(2*alpha + phi))/2 + Ia*La*alphad*m*yd*sin(2*alpha + phi) + Ia*Lb*alphad*m*yd*sin(2*alpha + phi) + Ia*La*alphad*ma*yd*sin(2*alpha + phi) + Ia*La*alphad*mb*yd*sin(2*alpha + phi) + Ia*Lb*alphad*ma*yd*sin(2*alpha + phi) + Ia*Lb*alphad*mb*yd*sin(2*alpha + phi) + 2*La*Lb*alphad*bRot*m*cos(2*alpha) + 2*La*Lb*alphad*bRot*mb*cos(2*alpha) + (Ia*La*m*phid*yd*sin(2*alpha + phi))/2 + Ia*Lb*m*phid*yd*sin(2*alpha + phi) + Ia*La*ma*phid*yd*sin(2*alpha + phi) + (Ia*La*mb*phid*yd*sin(2*alpha + phi))/2 + Ia*Lb*ma*phid*yd*sin(2*alpha + phi) + (Ia*Lb*mb*phid*yd*sin(2*alpha + phi))/2 + 2*La*Lb*bRot*m*phid*cos(2*alpha) + 2*La*Lb*bRot*mb*phid*cos(2*alpha) - (Ia*La*m*phid*xd*cos(2*alpha - phi))/2 - (Ia*La*mb*phid*xd*cos(2*alpha - phi))/2 - (Ia*Lb*mb*phid*xd*cos(2*alpha - phi))/2 + (Ia*La*m*phid*yd*sin(2*alpha - phi))/2 + (Ia*La*mb*phid*yd*sin(2*alpha - phi))/2 + (Ia*Lb*mb*phid*yd*sin(2*alpha - phi))/2 + Ia*La^2*alphad*m*phid*sin(2*alpha) + Ia*La^2*alphad*ma*phid*sin(2*alpha) + Ia*La^2*alphad*mb*phid*sin(2*alpha) + Ia*La*Lb*alphad*m*phid*sin(2*alpha) + Ia*La*Lb*alphad*ma*phid*sin(2*alpha) + Ia*La*Lb*alphad*mb*phid*sin(2*alpha))/(Ia*(I + Ib + La^2*m + 2*Lb^2*m + 2*La^2*ma + La^2*mb + 2*Lb^2*ma + Lb^2*mb - I*cos(2*alpha) - Ib*cos(2*alpha) + 2*La*Lb*m + 4*La*Lb*ma + 2*La*Lb*mb + La^2*m*cos(2*alpha) + La^2*mb*cos(2*alpha) + Lb^2*mb*cos(2*alpha) + 2*La*Lb*m*cos(2*alpha) + 2*La*Lb*mb*cos(2*alpha)))
 
];
yd = [qd; qdd];
